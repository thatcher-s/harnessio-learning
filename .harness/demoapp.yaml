pipeline:
  name: demo-app
  identifier: demoapp
  projectIdentifier: default_project
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: Application
        identifier: Application
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: demoappservice
            gitBranch: main
          environment:
            environmentRef: demoappenvironment
            gitBranch: main
            deployToAll: false
            provisioner:
              steps:
                - step:
                    type: TerraformPlan
                    name: Terraform Plan
                    identifier: Terraform_Plan
                    timeout: 5m
                    spec:
                      provisionerIdentifier: terraform_plan
                      configuration:
                        command: Apply
                        configFiles:
                          store:
                            spec:
                              connectorRef: account.demogithubconnector
                              gitFetchType: Branch
                              branch: main
                              folderPath: terraform
                            type: Github
                        providerCredential:
                          type: Aws
                          spec:
                            connectorRef: account.demoawsconnectorharness
                            region: us-east-1
                            roleArn: ""
                        varFiles:
                          - varFile:
                              spec:
                                content: |-
                                  access_key=<+secrets.getValue("demo_aws_access_key")>
                                  secret_key=<+secrets.getValue("demo_aws_secret_key")>
                              identifier: tfvars
                              type: Inline
                        secretManagerRef: account.harnessSecretManager
                        workspace: demo-app
                        exportTerraformHumanReadablePlan: true
                        skipRefreshCommand: false
                - step:
                    type: HarnessApproval
                    name: Approve Plan
                    identifier: Approve_Plan
                    timeout: 1d
                    spec:
                      approvalMessage: Please review the associated Terraform plan and approve or reject
                      includePipelineExecutionHistory: true
                      approvers:
                        userGroups:
                          - account._account_all_users
                        minimumCount: 1
                        disallowPipelineExecutor: true
                      approverInputs: []
                      isAutoRejectEnabled: true
                      callbackId: approve_plan
                - step:
                    type: TerraformApply
                    name: Terraform Apply
                    identifier: Terraform_Apply
                    timeout: 5m
                    spec:
                      provisionerIdentifier: terraform_plan
                      configuration:
                        type: InheritFromPlan
                        encryptOutput:
                          outputSecretManagerRef: harnessSecretManager
              rollbackSteps:
                - step:
                    type: TerraformRollback
                    name: Terraform Rollback
                    identifier: Terraform_Rollback
                    timeout: 5m
                    spec:
                      provisionerIdentifier: terraform_rollback
                      skipRefreshCommand: false
            infrastructureDefinitions:
              - identifier: demoappinfrastructure
          execution:
            steps:
              - step:
                  name: Rollout Deployment
                  identifier: rolloutDeployment
                  type: K8sRollingDeploy
                  timeout: 10m
                  spec:
                    skipDryRun: false
                    pruningEnabled: false
            rollbackSteps:
              - step:
                  name: Rollback Rollout Deployment
                  identifier: rollbackRolloutDeployment
                  type: K8sRollingRollback
                  timeout: 10m
                  spec:
                    pruningEnabled: false
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
